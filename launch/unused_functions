
int count = 0;
/**
 *
 * @param conf
 * @param sample_size
 */
void printDatabaseEntries(iai_image_logging_msgs::CompressedConfig conf, int sample_size)
{
  if (count != 0 && count % sample_size == 0)
  {
    ROS_INFO_STREAM("Saved " << sample_size << " images to " << conf.collection);
    ROS_INFO_STREAM("Format = " << conf.format);
    ROS_INFO_STREAM("JPEG quality = " << conf.jpeg_quality);
    ROS_INFO_STREAM("PNG level = " << conf.png_level);
  }
}

/**
 *
 */
void matrixFunction()
{
  boost::shared_ptr<CompConf> conf;
  conf = g_cfg;
  int sample_size = 100;

  if (count < sample_size)
  {
    conf->format = "jpeg";
    conf->jpeg_quality = 100;
    conf->png_level = 1;
    conf->collection = "db.im_raw_comp_jpeg100_png1";
    configurationCb(*conf);
  }

  else if (count < 2 * sample_size)
  {
    conf->format = "jpeg";
    conf->jpeg_quality = 100;
    conf->png_level = 5;
    conf->collection = "db.im_raw_comp_jpeg100_png9";
    configurationCb(*conf);
  }

  else if (count < 3 * sample_size)
  {
    conf->format = "png";
    conf->jpeg_quality = 100;
    conf->png_level = 1;
    conf->collection = "db.im_raw_comp_png1_jpeg100";
    configurationCb(*conf);
  }

  else if (count < 4 * sample_size)
  {
    conf->format = "png";
    conf->png_level = 1;
    conf->jpeg_quality = 1;
    conf->collection = "db.im_raw_comp_png1_jpeg1";
    configurationCb(*conf);
  }

  else if (count >= 4 * sample_size)
  {
    conf->format = "jpeg";
    conf->jpeg_quality = 1;
    conf->collection = "STOPPING WITH MISSING '.'";
    configurationCb(*conf);
  }
  printDatabaseEntries(*conf, sample_size);
  count++;
}


// image transport

image_transport::ImageTransport it(n);
  image_transport::TransportHints th("compressed");
  image_transport::Subscriber img_sub = it.subscribe("/camera/rgb/image_raw", 1, imageCb, ros::VoidPtr(), th);
